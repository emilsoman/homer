#!/usr/bin/env ruby

require 'thor'
require 'homer'
require 'highline/import'

class HomerRunner < Thor

  default_task :help

=begin
  desc "wipe", "Removes ~/.homer folder. WARNING : THIS IS DANGEROUS"
  def wipe
    Homer.wipe
  rescue Exception => e
    puts "Error: #{e.message}"
  end
=end

  desc "init", "Initializes homer. You need to do this to configure homer"
  def init
    Homer.init
  rescue Exception => e
    puts "Error: #{e.message}"
    puts e.backtrace
  end

  desc "list", "Lists your tracked dotfiles"
  def list
    puts Homer.list
  rescue Exception => e
    puts "Error: #{e.message}"
  end

=begin
  desc "add DOTFILE", "Start tracking a file"
  def add(file)
    Homer.add(file)
  rescue Exception => e
    puts "Error: #{e.message}"
    puts "Did you forget to run 'homer init' after you installed Homer gem ?"
  end

  desc "push", "Pushes your dotfiles to GitHub"
  def push
    Homer.push
  rescue Exception => e
    puts "Error: #{e.message}"
  end
=end

  desc "hi GITHUB_USERNAME", "Fetches 'dotfiles' repo of Github user"
  option :repo, aliases: "-r", desc: "Specify a Github repository name to fetch"
  def hi(github_login)
    repo = options[:repo] || 'dotfiles'
    Homer.hi(github_login)
  rescue Exception => e
    puts "Error: #{e.message}"
  end

=begin
  desc "bye", "Self destructs leaving no trace behind"
  def bye
    Homer.bye
  rescue Exception => e
    puts "Error: #{e.message}"
  end

  desc "restore", "Move back original files and remove symlinks"
  def restore
    puts "This should move back the original dotfiles and remove all symlinks"
  rescue Exception => e
    puts "Error: #{e.message}"
  end
=end

end

HomerRunner.start
